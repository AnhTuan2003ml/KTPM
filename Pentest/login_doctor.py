from selenium.webdriver.chrome.options import Options
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
import unittest

class LoginTest(unittest.TestCase):

    def setUp(self):
        chrome_options = Options()
        chrome_options.add_argument("--window-size=800,600")
        # Khởi tạo WebDriver
        self.driver = webdriver.Chrome(options=chrome_options)

    def test_login_success(self):
        driver = self.driver
        # Mở trang web
        driver.get("http://localhost:3000/backend/doc/index.php")
        
        # Tìm các phần tử trang web
        email_field = driver.find_element(By.ID, "emailaddress")
        password_field = driver.find_element(By.ID, "password")
        login_button = driver.find_element(By.NAME, "doc_login")
        
        # Nhập thông tin đăng nhập đúng
        email_field.send_keys("YDS7L")
        password_field.send_keys("password")
        
        # Click vào nút đăng nhập
        login_button.click()
        
        try:
            # Đợi đến khi URL của trang thay đổi
            WebDriverWait(driver, 2).until(
                EC.url_to_be("http://localhost:3000/backend/doc/his_doc_dashboard.php")
            )
            current_url = driver.current_url
            self.assertEqual(current_url, "http://localhost:3000/backend/doc/his_doc_dashboard.php")
            
        except TimeoutException:
            pass
        
    def test_login_failure_pass(self):
        driver = self.driver
        # Mở trang web
        driver.get("http://localhost:3000/backend/doc/index.php")
        
        # Tìm các phần tử trang web
        email_field = driver.find_element(By.ID, "emailaddress")
        password_field = driver.find_element(By.ID, "password")
        login_button = driver.find_element(By.NAME, "doc_login")
        
        # Nhập thông tin đăng nhập sai
        email_field.send_keys("YDS7L")
        password_field.send_keys("WrongPassword")
        
        # Click vào nút đăng nhập
        login_button.click()
        
        try:
            # Đợi đến khi thông báo lỗi xuất hiện
            error_message = WebDriverWait(driver, 2).until(
                EC.presence_of_element_located((By.CLASS_NAME, "swal-icon--error__x-mark"))
            )
            self.assertTrue(error_message.is_displayed())
            
        except TimeoutException:
            pass
    

    def test_login_failure_user(self):
        driver = self.driver
        # Mở trang web
        driver.get("http://localhost:3000/backend/doc/index.php")
        
        # Tìm các phần tử trang web
        email_field = driver.find_element(By.ID, "emailaddress")
        password_field = driver.find_element(By.ID, "password")
        login_button = driver.find_element(By.NAME, "doc_login")
        
        # Nhập thông tin đăng nhập sai
        email_field.send_keys("asffdfdfd")
        password_field.send_keys("password")
        
        # Click vào nút đăng nhập
        login_button.click()
        
        try:
            # Đợi đến khi thông báo lỗi xuất hiện
            error_message = WebDriverWait(driver, 2).until(
                EC.presence_of_element_located((By.CLASS_NAME, "swal-icon--error__x-mark"))
            )
            self.assertTrue(error_message.is_displayed())
            
        except TimeoutException:
            pass


    def test_login_failure_user_pass(self):
        driver = self.driver
        # Mở trang web
        driver.get("http://localhost:3000/backend/doc/index.php")
        
        # Tìm các phần tử trang web
        email_field = driver.find_element(By.ID, "emailaddress")
        password_field = driver.find_element(By.ID, "password")
        login_button = driver.find_element(By.NAME, "doc_login")
        
        # Nhập thông tin đăng nhập sai
        email_field.send_keys("asffdfdfd")
        password_field.send_keys("adsadsaas")
        
        # Click vào nút đăng nhập
        login_button.click()
        
        try:
            # Đợi đến khi thông báo lỗi xuất hiện
            error_message = WebDriverWait(driver, 2).until(
                EC.presence_of_element_located((By.CLASS_NAME, "swal-icon--error__x-mark"))
            )
            self.assertTrue(error_message.is_displayed())
            
        except TimeoutException:
            pass


    def tearDown(self):
        # Đóng trình duyệt
        self.driver.quit()

if __name__ == "__main__":
    unittest.main()
